{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport authReducer from \"./slices/authSlice\";\nimport toastReducer from \"./slices/toastSlice\";\n// import storage from 'reduxjs-toolkit-persist/lib/storage'\nimport sessionStorage from \"reduxjs-toolkit-persist/lib/storage/session\";\n// import thunk from \"redux-thunk\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nconst persistConfig = {\n  key: \"root\",\n  // storage,\n  storage: sessionStorage,\n  stateReconciler: autoMergeLevel2\n};\nconst reducers = combineReducers({\n  auth: authReducer,\n  toast: toastReducer\n});\nconst persistedReducer = persistReducer(persistConfig, reducers);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","authReducer","toastReducer","sessionStorage","autoMergeLevel2","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","stateReconciler","reducers","auth","toast","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/home/charles/projects/clique/clique-plus/src/redux/store.js"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport authReducer from \"./slices/authSlice\"\r\nimport toastReducer from \"./slices/toastSlice\"\r\n// import storage from 'reduxjs-toolkit-persist/lib/storage'\r\nimport sessionStorage from \"reduxjs-toolkit-persist/lib/storage/session\";\r\n// import thunk from \"redux-thunk\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  // storage,\r\n  storage: sessionStorage,\r\n  stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  toast: toastReducer\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n})\r\n\r\nexport const persistor = persistStore(store);"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,YAAY,MAAM,qBAAqB;AAC9C;AACA,OAAOC,cAAc,MAAM,6CAA6C;AACxE;AACA,OAAOC,eAAe,MAAM,mDAAmD;AAC/E,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AAEtB,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACX;EACAC,OAAO,EAAEZ,cAAc;EACvBa,eAAe,EAAEZ;AACnB,CAAC;AAED,MAAMa,QAAQ,GAAGlB,eAAe,CAAC;EAC/BmB,IAAI,EAAEjB,WAAW;EACjBkB,KAAK,EAAEjB;AACT,CAAC,CAAC;AAEF,MAAMkB,gBAAgB,GAAGd,cAAc,CAACO,aAAa,EAAEI,QAAQ,CAAC;AAEhE,OAAO,MAAMI,KAAK,GAAGrB,cAAc,CAAC;EAClCsB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACnB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMe,SAAS,GAAGtB,YAAY,CAACgB,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}