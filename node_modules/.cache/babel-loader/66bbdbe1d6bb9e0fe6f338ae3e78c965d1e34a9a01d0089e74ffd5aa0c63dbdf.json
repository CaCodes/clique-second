{"ast":null,"code":"var _jsxFileName = \"/home/charles/projects/clique/clique-plus/src/app/Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport AuthLayout from \"../components/AuthLayout\";\nimport logo from \"../assets/logo.png\";\nimport { TextLabelInput } from \"../components/CustomInput\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { signup } from \"../services/authService\";\nimport Spinner from \"../components/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  return /*#__PURE__*/_jsxDEV(AuthLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"auth_header\",\n        children: \"Get Started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text_sm\",\n        children: \"Glad to have you here! Create an account with us now.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          fullName: \"\",\n          email: \"\",\n          phoneNumber: \"\",\n          password: \"\",\n          confirmPassword: \"\"\n        },\n        validationSchema: Yup.object({\n          fullName: Yup.string().required(\"Full name is required\"),\n          phoneNumber: Yup.string().required(\"Phone number is required\"),\n          email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n          password: Yup.string().min(8, \"Must be 8 characters or more\").required(\"Password is required\"),\n          confirmPassword: Yup.string().required(\"Confirm Password is required\").oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n        }),\n        onSubmit: async values => {\n          setLoading(true);\n          let data = {\n            fullName: values.fullName,\n            email: values.email,\n            phoneNumber: values.phoneNumber,\n            password: values.password\n          };\n          const response = await signup(data);\n          if (!response.error) {\n            setLoading(false);\n            navigate(\"/\");\n          } else {\n            setLoading(false);\n            //   dispatch(\n            //     showToast({\n            //       status: \"error\",\n            //       message: errorHandler(response.data),\n            //     })\n            //   );\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(TextLabelInput, {\n              label: \"Full Name\",\n              name: \"fullName\",\n              type: \"text\",\n              placeholder: \"Full name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextLabelInput, {\n              label: \"Email\",\n              name: \"email\",\n              type: \"email\",\n              placeholder: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextLabelInput, {\n              label: \"Phone Number\",\n              name: \"phoneNumber\",\n              type: \"text\",\n              placeholder: \"Phone number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextLabelInput, {\n              label: \"Password\",\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextLabelInput, {\n              label: \"Confirm Password\",\n              name: \"confirmPassword\",\n              type: \"password\",\n              placeholder: \"Confirm password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"form_btn primary_bg semibold\",\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 26\n            }, this) : \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form_text text_center\",\n        children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"secondary_text pointer semibold\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"CCyv4qWO32aM2m+JtYOV2ZYBHlY=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Formik","Form","Yup","AuthLayout","logo","TextLabelInput","Link","useNavigate","signup","Spinner","jsxDEV","_jsxDEV","Signup","_s","navigate","loading","setLoading","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","fullName","email","phoneNumber","password","confirmPassword","validationSchema","object","string","required","min","oneOf","ref","onSubmit","values","data","response","error","label","name","type","placeholder","disabled","to","_c","$RefreshReg$"],"sources":["/home/charles/projects/clique/clique-plus/src/app/Signup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport AuthLayout from \"../components/AuthLayout\";\r\nimport logo from \"../assets/logo.png\";\r\nimport { TextLabelInput } from \"../components/CustomInput\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { signup } from \"../services/authService\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nexport default function Signup() {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  return (\r\n    <AuthLayout>\r\n      <div>\r\n        <img src={logo} alt=\"\" className=\"logo\" />\r\n      </div>\r\n      <div>\r\n        <h1 className=\"auth_header\">Get Started!</h1>\r\n        <p className=\"text_sm\">Glad to have you here! Create an account with us now.</p>\r\n      </div>\r\n      <div>\r\n        <Formik\r\n          initialValues={{\r\n            fullName: \"\",\r\n            email: \"\",\r\n            phoneNumber: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n          }}\r\n          validationSchema={Yup.object({\r\n            fullName: Yup.string().required(\"Full name is required\"),\r\n            phoneNumber: Yup.string().required(\"Phone number is required\"),\r\n            email: Yup.string()\r\n              .email(\"Invalid email address\")\r\n              .required(\"Email is required\"),\r\n            password: Yup.string()\r\n              .min(8, \"Must be 8 characters or more\")\r\n              .required(\"Password is required\"),\r\n            confirmPassword: Yup.string()\r\n              .required(\"Confirm Password is required\")\r\n              .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\r\n          })}\r\n          onSubmit={async (values) => {\r\n            setLoading(true);\r\n            let data = {\r\n              fullName: values.fullName,\r\n              email: values.email,\r\n              phoneNumber: values.phoneNumber,\r\n              password: values.password,\r\n            }\r\n            const response = await signup(data);\r\n            if (!response.error) {\r\n              setLoading(false);\r\n              navigate(\"/\")\r\n            } else {\r\n              setLoading(false);\r\n            //   dispatch(\r\n            //     showToast({\r\n            //       status: \"error\",\r\n            //       message: errorHandler(response.data),\r\n            //     })\r\n            //   );\r\n            }\r\n          }}\r\n        >\r\n          <Form>\r\n            <div className=\"input_wrap\">\r\n              <TextLabelInput\r\n                label=\"Full Name\"\r\n                name=\"fullName\"\r\n                type=\"text\"\r\n                placeholder=\"Full name\"\r\n              />\r\n              <TextLabelInput\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email Address\"\r\n              />\r\n              <TextLabelInput\r\n                label=\"Phone Number\"\r\n                name=\"phoneNumber\"\r\n                type=\"text\"\r\n                placeholder=\"Phone number\"\r\n              />\r\n              <TextLabelInput\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n              <TextLabelInput\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"form_btn primary_bg semibold\"\r\n              type=\"submit\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? <Spinner /> : \"Sign up\"}\r\n            </button>\r\n          </Form>\r\n        </Formik>\r\n        <p className=\"form_text text_center\">\r\n          Already have an account?{\" \"}\r\n          <Link to={\"/\"}><span className=\"secondary_text pointer semibold\">Sign in</span></Link>\r\n        </p>\r\n      </div>\r\n    </AuthLayout>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}